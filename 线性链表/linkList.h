// ????????? ??????????????????????  

#ifndef LINK_LIST_H
#define LINK_LIST_H

// ???????????????struct ?????????LNode *next
typedef struct {
    int data;// ????
    struct LNode *next; // ???????????
} LNode;


typedef LNode* LinkList;

/*
*   ?????????
*/
int initLinkList(LinkList *L);


/*
*   ??????
*/
int isEmpty(LinkList header);

/*
* ??2.9
* ???????
*/
int insertItem(LinkList header, int position, int item);

/*
*   ??2.8
*   ??????????????
*   ???????????????
*/
LNode getItem(LinkList header, int position);

/*
*   ???????
*   @prams {LinkList} header ????
*   @prams {function} callBack ??????? ????????????????????????????????
*/
void forEach(LinkList header, void(*callBack)(int, int));

/*
*   ???????????
*/
int getLength(LinkList header);

/**
 * ??????????????
 */
LNode getPrevNode(LinkList header, int position);

/**
 * ??????????????
 * ??????????????
 */
LNode getNextNode(LinkList header, int position);

/*
*   ??2.10
*   ?????????????
*/

int deleteNode(LinkList header, int position);

/**
 * ???????push
 */
int push(LinkList header, int item);

/**
 * unshift
 */
int unshift(LinkList header, int item);
/**
 * pop
 * ????????data ??????????-1
 */
int pop(LinkList header);

/**
 * shift
 */
int shift(LinkList header);

/**
 * ???????????? ????????
 */
int findIndex(LinkList header, int (*callBack)(int, int));
/**
 * 清空列表
 */
int clearList(LinkList header);

/**
 * 销毁列表
 */
int destoryList(LinkList header);

/**
 * 逆序产生链表
 */
void creatList(LinkList *header, int count);
#endif

